spring.application.name=board-app-backend

server.port=9090

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://db-opf9a-kr.vpc-pub-cdb.ntruss.com:3306/studydb
spring.datasource.username=study
spring.datasource.password=!dkdlxl1234


# naver cloud API
# ncloud.com -> mypage -> 인증
ncp.accessKey=ncp_iam_BPASKR5MWV47r4nviBhc
ncp.secretKey=ncp_iam_BPKSKRAai1fT3TGFUNi4u5NtqXYEVqeu42
ncp.regionName=kr-standard
ncp.endPoint=https://kr.object.ncloudstorage.com

# filesize
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

# JPA 설정
# JPA DB 연동
# 어떤 RDMBS를 사용할 지 지정
spring.jpa.database=mysql
# DBMS마다 구문이나 문법이 조금씩 다르기 때문에
# JPA에서 어떤 DBMS의 구문이나 문법을 사용할 것인지 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# JPA의 동작 방식 지정(ddl-auto)
# create: 어플리케이션이 구동될 때 모든 테이블을 삭제했다가 다시 생성
# update: 테이블과 데이터는 유지되면서 변경사항이 있을 때만 반영
# drop: 어플리케이션이 구동될 때 테이블을 생성하고 종료될 때 테이블을 삭제
spring.jpa.hibernate.ddl-auto=update
# JPA에서 실행되는 쿼리문을 콘솔에 표시할 것인지 여부를 지정
spring.jpa.show-sql=true
# JPA에서 쿼리를 콘솔에 표출할 때 형식에 맞춰서 표출할 것인지 여부를 지정
# 들여쓰기 및 줄바꿈을 표시할 것인지 지정
spring.jpa.properties.hibernate.format_sql=true